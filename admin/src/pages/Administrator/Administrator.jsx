import './Administrator.css';
import React, { useContext, useState } from 'react';
import axios from 'axios';
import { ShopContext } from '../../components/Context/ShopContext';

const Administrator = () => {
  const { shops } = useContext(ShopContext); // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –º–∞–≥–∞–∑–∏–Ω–æ–≤ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  const [login, setLogin] = useState('');
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [selectedShopId, setSelectedShopId] = useState(''); // –°—Ç–µ–π—Ç –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
  const [showPassword, setShowPassword] = useState(false); // –°—Ç–µ–π—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç—å—é –ø–∞—Ä–æ–ª—è
  const [message, setMessage] = useState('');

  const handleSubmit = async (e) => {
    e.preventDefault();

    try {
      const response = await axios.post('http://localhost:4000/api/role/shop/register', {
        login,
        email,
        password,
        shopId: selectedShopId, // –ü–µ—Ä–µ–¥–∞—ë–º ID –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
      });

      setMessage(response.data.message);
    } catch (error) {
      setMessage(error.response?.data?.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏');
    }
  };

  return (
    <div className="register-shop-user">
      <h2>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –º–∞–≥–∞–∑–∏–Ω–∞</h2>
      {message && <p>{message}</p>}
      <form onSubmit={handleSubmit}>
        <input
          type="text"
          placeholder="–õ–æ–≥–∏–Ω"
          value={login}
          onChange={(e) => setLogin(e.target.value)}
          required
        />
        <input
          type="email"
          placeholder="Email"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          required
        />
        <input
          type={showPassword ? 'text' : 'password'}
          placeholder="–ü–∞—Ä–æ–ª—å"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
          required
        />
        <button
          type="button"
          className={`toggle-password ${showPassword ? 'active' : ''}`} // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å active, –µ—Å–ª–∏ –ø–∞—Ä–æ–ª—å –≤–∏–¥–∏–º
          onClick={() => setShowPassword((prev) => !prev)}
          aria-label="–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—å –ø–∞—Ä–æ–ª—è"
        >
          {/* –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–∫–æ–Ω–∫—É –∏–ª–∏ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ */}
          <span className="toggle-icon">{showPassword ? 'üëÅÔ∏è' : 'üôà'}</span>
        </button>
        <select
          value={selectedShopId}
          onChange={(e) => setSelectedShopId(e.target.value)} // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º ID –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
          required
        >
          <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –º–∞–≥–∞–∑–∏–Ω</option>
          {shops.map(shop => (
            <option key={shop._id} value={shop._id}>
              {shop.name} {/* –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —É –º–∞–≥–∞–∑–∏–Ω–∞ –µ—Å—Ç—å –ø–æ–ª–µ name */}
            </option>
          ))}
        </select>

        <button type="submit">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å</button>
      </form>
    </div>
  );
}

export default Administrator;
